//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Quanlyhocsinhcap3
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DataHocSinhEntities : DbContext
    {
        public DataHocSinhEntities()
            : base("name=DataHocSinhEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<DIEMSO> DIEMSOes { get; set; }
        public virtual DbSet<GIAOVIEN> GIAOVIENs { get; set; }
        public virtual DbSet<HOCKY> HOCKies { get; set; }
        public virtual DbSet<HOCSINH> HOCSINHs { get; set; }
        public virtual DbSet<KHOIHOC> KHOIHOCs { get; set; }
        public virtual DbSet<LOPHOC> LOPHOCs { get; set; }
        public virtual DbSet<MONHOC> MONHOCs { get; set; }
        public virtual DbSet<NAMHOC> NAMHOCs { get; set; }
        public virtual DbSet<PHANCONG> PHANCONGs { get; set; }
        public virtual DbSet<THANNHAN> THANNHANs { get; set; }
        public virtual DbSet<XEPLOP> XEPLOPs { get; set; }
        public virtual DbSet<DangNhap> DangNhaps { get; set; }
    
        public virtual ObjectResult<CheckIDPass_Result> CheckIDPass(string taikhoan, string matkhau)
        {
            var taikhoanParameter = taikhoan != null ?
                new ObjectParameter("taikhoan", taikhoan) :
                new ObjectParameter("taikhoan", typeof(string));
    
            var matkhauParameter = matkhau != null ?
                new ObjectParameter("matkhau", matkhau) :
                new ObjectParameter("matkhau", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckIDPass_Result>("CheckIDPass", taikhoanParameter, matkhauParameter);
        }
    
        public virtual int CheckNextNAMHOC(Nullable<int> manh)
        {
            var manhParameter = manh.HasValue ?
                new ObjectParameter("manh", manh) :
                new ObjectParameter("manh", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CheckNextNAMHOC", manhParameter);
        }
    
        public virtual int CreateNewNAMHOC(Nullable<int> manh)
        {
            var manhParameter = manh.HasValue ?
                new ObjectParameter("manh", manh) :
                new ObjectParameter("manh", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateNewNAMHOC", manhParameter);
        }
    
        public virtual int DeleteStudentFromXEPLOP(Nullable<int> maxl)
        {
            var maxlParameter = maxl.HasValue ?
                new ObjectParameter("maxl", maxl) :
                new ObjectParameter("maxl", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteStudentFromXEPLOP", maxlParameter);
        }
    
        public virtual int ExistsOfStudent(Nullable<int> mahs)
        {
            var mahsParameter = mahs.HasValue ?
                new ObjectParameter("mahs", mahs) :
                new ObjectParameter("mahs", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExistsOfStudent", mahsParameter);
        }
    
        public virtual int ExistsOfTeacher(Nullable<int> magv)
        {
            var magvParameter = magv.HasValue ?
                new ObjectParameter("magv", magv) :
                new ObjectParameter("magv", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExistsOfTeacher", magvParameter);
        }
    
        public virtual int InsertPHANCONG(Nullable<int> magv, Nullable<int> malh, Nullable<int> mamh)
        {
            var magvParameter = magv.HasValue ?
                new ObjectParameter("magv", magv) :
                new ObjectParameter("magv", typeof(int));
    
            var malhParameter = malh.HasValue ?
                new ObjectParameter("malh", malh) :
                new ObjectParameter("malh", typeof(int));
    
            var mamhParameter = mamh.HasValue ?
                new ObjectParameter("mamh", mamh) :
                new ObjectParameter("mamh", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertPHANCONG", magvParameter, malhParameter, mamhParameter);
        }
    
        public virtual int UpClassXEPLOP(Nullable<int> manh, Nullable<int> makh)
        {
            var manhParameter = manh.HasValue ?
                new ObjectParameter("manh", manh) :
                new ObjectParameter("manh", typeof(int));
    
            var makhParameter = makh.HasValue ?
                new ObjectParameter("makh", makh) :
                new ObjectParameter("makh", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpClassXEPLOP", manhParameter, makhParameter);
        }
    
        public virtual int UpdateScores()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateScores");
        }
    
        public virtual ObjectResult<ViewScores_Result> ViewScores(Nullable<int> mahs, Nullable<int> makh)
        {
            var mahsParameter = mahs.HasValue ?
                new ObjectParameter("mahs", mahs) :
                new ObjectParameter("mahs", typeof(int));
    
            var makhParameter = makh.HasValue ?
                new ObjectParameter("makh", makh) :
                new ObjectParameter("makh", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ViewScores_Result>("ViewScores", mahsParameter, makhParameter);
        }
    }
}
